name: create executables
run-name: build for commit "${{ github.event.head_commit.message }}" (${{ github.sha }})
on: [push]
permissions:
  contents: write
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - run: bun build --compile --minify --sourcemap --bytecode --target=bun-windows-x64 main.js --outfile ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_win.exe
      - run: bun build --compile --minify --sourcemap --bytecode --target=bun-linux-x64 main.js --outfile ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_linux
      - run: bun build --compile --minify --sourcemap --bytecode --target=bun-darwin-arm64 main.js --outfile ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_osx-arm
      - run: bun build --compile --minify --sourcemap --bytecode --target=bun-darwin-x64 main.js --outfile ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_osx-x64
      - name: Upload windows-executable
        uses: actions/upload-artifact@v4
        with:
          name: windows-executable_${{ env.COMMIT_SHORT_SHA }}
          path: ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_win.exe
      - name: Upload linux-executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-executable_${{ env.COMMIT_SHORT_SHA }}
          path: ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_linux
      - name: Upload macos-arm executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm-executable_${{ env.COMMIT_SHORT_SHA }}
          path: ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_osx-arm
      - name: Upload macos-x64 executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-x64-executable_${{ env.COMMIT_SHORT_SHA }}
          path: ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_osx-x64
      - run: mv ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_osx-x64 ${{vars.PROJECT_NAME}}_${{ github.ref_name }}_osx-x64
        if: startsWith(github.ref, 'refs/tags/')
      - run: mv ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_osx-arm ${{vars.PROJECT_NAME}}_${{ github.ref_name }}_osx-arm
        if: startsWith(github.ref, 'refs/tags/')
      - run: mv ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_linux ${{vars.PROJECT_NAME}}_${{ github.ref_name }}_linux
        if: startsWith(github.ref, 'refs/tags/')
      - run: mv ${{vars.PROJECT_NAME}}_${{ env.COMMIT_SHORT_SHA }}_win.exe ${{vars.PROJECT_NAME}}_${{ github.ref_name }}_win.exe
        if: startsWith(github.ref, 'refs/tags/')
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{vars.PROJECT_NAME}}_${{  github.ref_name }}_osx-arm
            ${{vars.PROJECT_NAME}}_${{  github.ref_name }}_osx-x64
            ${{vars.PROJECT_NAME}}_${{  github.ref_name }}_linux
            ${{vars.PROJECT_NAME}}_${{  github.ref_name }}_win.exe
            ${{vars.PROJECT_NAME}}_${{ github.ref_name }}_config.example.toml
